@model GraphModel
@{
    ViewData["Title"] = "Weerstation grafiek";
}
<div class="graph_container">
    <div class="graph_left">
        @using (Html.BeginForm())
        {
            <p class="label">Weerstation:</p>
            @Html.DropDownListFor(model => model.selectedListValue, Model.weerstationList, "--Kies een weerstation--", new { @class = "dropdownlist" })

            <p class="label">Datumrange:</p>
            @Html.TextBoxFor(model => model.startPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })
            <p class="label">tot</p>
            @Html.TextBoxFor(model => model.endPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })

            <p class="label">Instellingen:</p>
            <p class="label"> Temperatuur: <p class="radiobutton">@Html.RadioButtonFor(model => model.weerstationTemperatuurEenheid, false, new { @checked = "checked" }) Celsius</p><p class="radiubutton">@Html.RadioButtonFor(model => model.weerstationTemperatuurEenheid, true) Fahrenheit</p></p>
            <p class="label"> Windschaal: @Html.RadioButtonFor(model => model.weerstationWindEenheid, false, new { @checked = "checked" }) meter per seconde @Html.RadioButtonFor(model => model.weerstationWindEenheid, true) Beaufort</p>

            <input type="submit" value="Submit" class="submitter" />
        }
    </div>
    <div class="graph_right">
        <canvas id="chart"></canvas>
    </div>
</div>
<!-- #region Grafiekcode -->
@if (Model.selectedWeerstations.Count > 0)
{
<script>
	var chartData = @Html.Raw(Json.Serialize(Model.chartData));

	function buildChart () {
        var dataDates = chartData.value[0];
		var dataTemperatureGc = chartData.value[1];
        var dataTemperatureCm = chartData.value[2];
        var dataWindspeedMs = chartData.value[3];
        var dataWindspeedBf = chartData.value[4];
        var dataHumidity = chartData.value[5];
        var dataAirPressure = chartData.value[6];

        var dataT = {
            labels: dataDates,
            datasets: [
                @if(Model.weerstationTemperatuurEenheid)
                {
                    if (Model.selectedWeerstations[0].TemperatureGc != -999)
                    {
                        @:{
                        @:label: "Temperatuur in graden Fahrenheit",
                        @:data: dataTemperatureGc,
				        @:fill: false,
				        @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				        @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerstations[0].TemperatureCm != -999)
                    {
                        @:{
                        @:label: "Temperatuur op 10cm hoogte in graden Fahrenheit",
                        @:data: dataTemperatureCm,
                        @:fill: false,
                        @:backgroundColor:["rgba(200, 100, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                        @:borderColor:["rgb(200, 100, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                else
                {
                    if (Model.selectedWeerstations[0].TemperatureGc != -999)
                    {
                        @:{
                        @:label: "Temperatuur in graden Celsius",
                        @:data: dataTemperatureGc,
				        @:fill: false,
				        @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				        @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerstations[0].TemperatureCm != -999)
                    {
                        @:{
                        @:label: "Temperatuur op 10cm hoogte in graden Celsius",
                        @:data: dataTemperatureCm,
                        @:fill: false,
                        @:backgroundColor:["rgba(200, 100, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                        @:borderColor:["rgb(200, 100, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                @if (!Model.weerstationWindEenheid && Model.selectedWeerstations[0].WindspeedMs != -999)
                {
                    @:{
                    @:label: "Windsnelheid in meter per seconde",
                    @:data: dataWindspeedMs,
				    @:fill: false,
				    @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				    @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				    @:borderWidth: 2
                    @:},
                }
                else if (Model.selectedWeerstations[0].WindspeedBf != -999)
                {
                    @:{
                    @:label: "Windsnelheid volgens de schaal van Beaufort",
                    @:data: dataWindspeedBf,
				    @:fill: false,
				    @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				    @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				    @:borderWidth: 2
                    @:},
                }
                @if (Model.selectedWeerstations[0].Humidity != -999)
                {
                    @:{
                    @:label: "Luchtvochtigheid in relatieve percentage",
                    @:data: dataHumidity,
				    @:fill: false,
				    @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				    @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				    @:borderWidth: 2
                    @:},
                }
                @if (Model.selectedWeerstations[0].AirPressure != -999)
                {
                    @:{
                    @:label: "Luchtdruk in hectopascal (hPa)",
                    @:data: dataAirPressure,
				    @:fill: false,
				    @:backgroundColor:["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
				    @:borderColor:["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
				    @:borderWidth: 2
                    @:}
                }
            ]
		};
		var ctx = $("#chart").get(0).getContext("2d");
		var myNewChart = new Chart(ctx, {
			type: 'line',
			data: dataT,
			options: {
				responsive: true,
				title: { display: true, text: 'Resultaten @Model.selectedWeerstations[0].Name van @Model.startPeriod tot @Model.endPeriod' },
				legend: { position: 'top' },
				scales: {
					xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Moment' } }],
					yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Waarde' }, ticks: { stepSize: 10, beginAtZero: false } }]
				},
			}
		});
	};

	buildChart();
</script>
}
<!-- #endregion -->