@model GraphModel
@{
    ViewData["Title"] = "Weerstation grafiek";
}
<div class="graph_container">
    <!-- Selectie van weerstation en instellingen voor grafiek -->
    <div class="graph_left">
        @using (Html.BeginForm())
        {
            <!-- Dropdown-list voor weerstations -->
            <p class="label">Weerstation:</p>
            @Html.DropDownListFor(model => model.selectedListValue, Model.weerstationList, "--Kies een weerstation--", new { @class = "dropdownlist" })

            <!-- Datumselectie -->
            <p class="label">Datumrange:</p>
            @Html.TextBoxFor(model => model.startPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })
            <p class="label" style="display: block">tot</p>
            @Html.TextBoxFor(model => model.endPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })

            <!-- Instellingen voor grafiek -->
            <p class="label">Filters (toegepast op Submit):</p>
            <div class="settingsbox">
                <div class="inner_settingsbox">
                    <label>> Temperatuur: @Html.CheckBoxFor(model => model.enableWeerstationTemperatureGc, new { @checked = "checked" })</label>
                    <label>> Temperatuur op 10 cm: @Html.CheckBoxFor(model => model.enableWeerstationTemperatureCm, new { @checked = "checked" })</label>
                    <label>> Windsnelheid: @Html.CheckBoxFor(model => model.enableWeerstationWindspeed, new { @checked = "checked" })</label>
                </div>             
                <div class="inner_settingsbox">
                    <label>> Luchtvochtigheid: @Html.CheckBoxFor(model => model.enableWeerstationHumidity, new { @checked = "checked" })</label>
                    <label>> Luchtdruk: @Html.CheckBoxFor(model => model.enableWeerstationAirPressure, new { @checked = "checked" })</label>
                </div>
            </div>

            <p class="label">Instellingen:</p>
            <div class="settingsbox">
                <div class="inner_settingsbox">
                    <label>Temperatuureenheid:</label>
                    <label>@Html.RadioButtonFor(model => model.weerstationTemperatuurEenheid, false, new { @checked = "checked" }) Celsius</label>
                    <label>@Html.RadioButtonFor(model => model.weerstationTemperatuurEenheid, true) Fahrenheit</label>
                </div>
                <div class="inner_settingsbox">
                    <label>Windschaaleenheid:</label>
                    <label>@Html.RadioButtonFor(model => model.weerstationWindEenheid, false, new { @checked = "checked" }) Meter per seconde</label>
                    <label>@Html.RadioButtonFor(model => model.weerstationWindEenheid, true) Beaufort</label>
                </div>
            </div>
            
            <!-- Submit knop -->
            <input type="submit" value="Submit" class="submitter" />
            <p class="small-label">Opmerking: niet alle weerstations hebben alle sensoren beschikbaar. Sommige weerstations hebben dus geen temperatuur of luchtdruk of windsnelheid opgeslagen.</p>
        }
    </div>
    <div class="graph_right">
        <!-- Grafieklocatie -->
        <canvas id="chart"></canvas>
    </div>
</div>
<!-- #region Grafiekcode -->
<!-- Check of er überhaupt weerstations zijn die binnen de selectie vallen -->
@if (Model.selectedWeerstations.Count > 0)
{
<script>
    // Json data omzetten naar bruikbare data
    var chartData = @Html.Raw(Json.Serialize(Model.chartData));

    function buildChart() {
        // Data opzetten voor gebruik in grafiek
        var dataDates = chartData.value[0];
        var dataTemperatureGc = chartData.value[1];
        var dataTemperatureCm = chartData.value[2];
        var dataWindspeedMs = chartData.value[3];
        var dataWindspeedBf = chartData.value[4];
        var dataHumidity = chartData.value[5];
        var dataAirPressure = chartData.value[6];

        // Data verwerken naar grafiek datasets
        var dataT = {
            labels: dataDates,
            datasets: [
                // Temperatuur
                // Check of het in Celsius of Fahrenheit moet zijn
                @if(Model.weerstationTemperatuurEenheid)
                {
                    @:// Check of temperatuur überhaupt beschikbaar is (niet -999 dus)
                    if (Model.selectedWeerstations[0].TemperatureGc != -999)
                    {
                        @:{
                        @:label: "Temperatuur in graden Fahrenheit",
                        @:data: dataTemperatureGc,
				        @:fill: false,
				        @:backgroundColor: ["#e67300"],
				        @:borderColor: ["#e67300"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerstations[0].TemperatureCm != -999)
                    {
                        @:{
                        @:label: "Temperatuur op 10cm hoogte in graden Fahrenheit",
                        @:data: dataTemperatureCm,
                        @:fill: false,
                        @:backgroundColor: ["#802b00"],
				        @:borderColor: ["#802b00"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                else
                {
                    if (Model.selectedWeerstations[0].TemperatureGc != -999)
                    {
                        @:{
                        @:label: "Temperatuur in graden Celsius",
                        @:data: dataTemperatureGc,
				        @:fill: false,
				        @:backgroundColor: ["#e67300"],
				        @:borderColor: ["#e67300"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerstations[0].TemperatureCm != -999)
                    {
                        @:{
                        @:label: "Temperatuur op 10cm hoogte in graden Celsius",
                        @:data: dataTemperatureCm,
                        @:fill: false,
                        @:backgroundColor: ["#802b00"],
				        @:borderColor: ["#802b00"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                // Windsnelheid
                // Check of het in meter per seconde of Beaufort moet zijn
                // Check ook of windsnelheid überhaupt beschikbaar is (niet -999 dus)
                @if (!Model.weerstationWindEenheid && Model.selectedWeerstations[0].WindspeedMs != -999)
                {
                    @:{
                    @:label: "Windsnelheid in meter per seconde",
                    @:data: dataWindspeedMs,
				    @:fill: false,
				    @:backgroundColor:["#ffffff"],
				    @:borderColor: ["#ffffff"],
				    @:borderWidth: 2
                    @:},
                }
                else if (Model.selectedWeerstations[0].WindspeedBf != -999)
                {
                    @:{
                    @:label: "Windsnelheid volgens de schaal van Beaufort",
                    @:data: dataWindspeedBf,
				    @:fill: false,
				    @:backgroundColor: ["#ffffff"],
				    @:borderColor: ["#ffffff"],
				    @:borderWidth: 2
                    @:},
                }
                // Luchtvochtigheid
                // Check of luchtvochtigheid überhaupt beschikbaar is (niet -999 dus)
                @if (Model.selectedWeerstations[0].Humidity != -999)
                {
                    @:{
                    @:label: "Luchtvochtigheid in relatieve percentage",
                    @:data: dataHumidity,
				    @:fill: false,
				    @:backgroundColor: ["#3399ff"],
				    @:borderColor: ["#3399ff"],
				    @:borderWidth: 2
                    @:},
                }
                // Luchtdruk
                // Check of luchtdruk überhaupt beschikbaar is (niet -999 dus)
                @if (Model.selectedWeerstations[0].AirPressure != -999)
                {
                    @:{
                    @:label: "Luchtdruk in hectopascal (hPa)",
                    @:data: dataAirPressure,
				    @:fill: false,
				    @:backgroundColor: ["#000d1a"],
				    @:borderColor: ["#000d1a"],
				    @:borderWidth: 2
                    @:}
                }
            ]
        };
        // Bouw de grafiek op
		var ctx = $("#chart").get(0).getContext("2d");
		var myNewChart = new Chart(ctx, {
			type: 'line',
			data: dataT,
			options: {
				responsive: true,
				title: { display: true, text: 'Resultaten @Model.selectedWeerstations[0].Name van @Model.startPeriod tot @Model.endPeriod' },
				legend: { position: 'top' },
				scales: {
					xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Moment' } }],
					yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Waarde' }, ticks: { stepSize: 50, beginAtZero: false } }]
				},
			}
		});
	};

    // Voer bovenstaande functie uit
	buildChart();
</script>
}
<!-- #endregion -->