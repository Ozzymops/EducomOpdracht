@model GraphModel
@{
    ViewData["Title"] = "Weerbericht grafiek";
}
<div class="graph_container">
    <!-- Selectie van datumrange en instellingen voor grafiek -->
    <div class="graph_left">
        @using (Html.BeginForm())
        {
            <!-- Datumselectie -->
            <p class="label">Datumrange:</p>
            @Html.TextBoxFor(model => model.startPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })
            <p class="label" style="display: block">tot</p>
            @Html.TextBoxFor(model => model.endPeriod, new { @class = "datepicker", @placeholder = "format: dd-mm-yyyy hh:mm:ss" })

            <!-- Instellingen voor grafiek -->
            <p class="label">Filters (toegepast op Submit):</p>
            <div class="settingsbox">
                <div class="inner_settingsbox">
                    <label>> Maximum temperatuur: @Html.CheckBoxFor(model => model.enableWeerberichtMaxTemp, new { @checked = "checked" })</label>
                    <label>> Minimum temperatuur: @Html.CheckBoxFor(model => model.enableWeerberichtMinTemp, new { @checked = "checked" })</label>
                    <label>> Windsnelheid: @Html.CheckBoxFor(model => model.enableWeerberichtWindspeed, new { @checked = "checked" })</label>
                </div>
                <div class="inner_settingsbox">
                    <label>> Regenkans: @Html.CheckBoxFor(model => model.enableWeerberichtRainChance, new { @checked = "checked" })</label>
                    <label>> Zonkans: @Html.CheckBoxFor(model => model.enableWeerberichtSunChance, new { @checked = "checked" })</label>
                </div>
            </div>

            <p class="label">Instellingen:</p>
            <div class="settingsbox">
                <div class="inner_settingsbox" style="margin: 25px">
                    <label>Temperatuureenheid:</label>
                    <label>@Html.RadioButtonFor(model => model.weerberichtTemperatuurEenheid, false, new { @checked = "checked" }) Celsius</label>
                    <label>@Html.RadioButtonFor(model => model.weerberichtTemperatuurEenheid, true) Fahrenheit</label>
                </div>
            </div>

            <!-- Submit knop -->
            <input type="submit" value="Submit" class="submitter" />
        }
    </div>
    <div class="graph_right">
        <!-- Grafieklocatie -->
        <canvas id="chart"></canvas>
    </div>
</div>
<!-- #region Grafiekcode -->
<!-- Check of er überhaupt weerberichten zijn die binnen de selectie vallen -->
@if (Model.selectedWeerberichten.Count > 0)
{
<script>
    // Json data omzetten naar bruikbare data
    var chartData = @Html.Raw(Json.Serialize(Model.chartData));

    function buildChart() {
        // Data opzetten voor gebruik in grafiek
        var dataDates = chartData.value[0];
        var dataMaxTemperature = chartData.value[1];
        var dataMinTemperature = chartData.value[2];
        var dataWindspeedBf = chartData.value[3];
        var dataRainChance = chartData.value[4];
        var dataSunChance = chartData.value[5];

        // Data verwerken naar grafiek datasets
        var dataT = {
            labels: dataDates,
            datasets: [
                // Temperatuur
                // Check of het in Celsius of Fahrenheit moet zijn
                @if(Model.weerberichtTemperatuurEenheid)
                {
                    @:// Check of temperatuur überhaupt beschikbaar is (niet -999 dus)
                    if (Model.selectedWeerberichten[0].MaxTemperature != -999)
                    {
                        @:{
                        @:label: "Maximum temperatuur in graden Fahrenheit",
                        @:data: dataMaxTemperature,
				        @:fill: false,
				        @:backgroundColor: ["#ff9966"],
				        @:borderColor: ["#ff9966"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerberichten[0].MinTemperature != -999)
                    {
                        @:{
                        @:label: "Minimum temperatuur in graden Fahrenheit",
                        @:data: dataMinTemperature,
                        @:fill: false,
                        @:backgroundColor: ["#99ccff"],
				        @:borderColor: ["#99ccff"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                else
                {
                    if (Model.selectedWeerberichten[0].MaxTemperature != -999)
                    {
                        @:{
                        @:label: "Maximum temperatuur in graden Celsius",
                        @:data: dataMaxTemperature,
				        @:fill: false,
				        @:backgroundColor: ["#ff9966"],
				        @:borderColor: ["#ff9966"],
				        @:borderWidth: 2
                        @:},
                    }
                    if (Model.selectedWeerberichten[0].MinTemperature != -999)
                    {
                        @:{
                        @:label: "Minimum temperatuur in graden Celsius",
                        @:data: dataMinTemperature,
                        @:fill: false,
                        @:backgroundColor: ["#99ccff"],
				        @:borderColor: ["#99ccff"],
                        @:borderWidth: 2
                        @:},
                    }
                }
                // Windsnelheid
                // Check of windsnelheid überhaupt beschikbaar is (niet -999 dus)
                @if (Model.selectedWeerberichten[0].Windspeed != -999)
                {
                    @:{
                    @:label: "Windsnelheid volgens de schaal van Beaufort",
                    @:data: dataWindspeedBf,
				    @:fill: false,
				    @:backgroundColor:["#ffffff"],
				    @:borderColor: ["#ffffff"],
				    @:borderWidth: 2
                    @:},
                }
                // Regen kans
                // Check of regen kans überhaupt beschikbaar is (niet -999 dus)
                @if (Model.selectedWeerberichten[0].RainChance != -999)
                {
                    @:{
                    @:label: "Kans op regen in percentage",
                    @:data: dataRainChance,
				    @:fill: false,
				    @:backgroundColor: ["#0066ff"],
				    @:borderColor: ["#0066ff"],
				    @:borderWidth: 2
                    @:},
                }
                // Zon kans
                // Check of zon kans überhaupt beschikbaar is (niet -999 dus)
                @if (Model.selectedWeerberichten[0].SunChance != -999)
                {
                    @:{
                    @:label: "Kans op zon in percentage",
                    @:data: dataSunChance,
				    @:fill: false,
				    @:backgroundColor: ["#ffcc00"],
				    @:borderColor: ["#ffcc00"],
				    @:borderWidth: 2
                    @:}
                }
            ]
        };
        // Bouw de grafiek op
	    var ctx = $("#chart").get(0).getContext("2d");
	    var myNewChart = new Chart(ctx, {
		    type: 'line',
		    data: dataT,
		    options: {
			    responsive: true,
			    title: { display: true, text: 'Resultaten weerberichten van @Model.startPeriod tot @Model.endPeriod' },
			    legend: { position: 'top' },
			    scales: {
				    xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Moment' } }],
				    yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Waarde' }, ticks: { stepSize: 10, beginAtZero: false } }]
			    },
		    }
	    });
    };

    // Voer bovenstaande functie uit
    buildChart();
</script>
}
<!-- #endregion -->