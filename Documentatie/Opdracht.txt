[Stappenplan]
1. Creëer Visual Studio project met template 'ASP.NET Core Web App (Model-View-Controller)' genaamd 'EducomOpdracht'.
2. Stel twee projects in: 'EducomOpdracht' en 'EducomOpdrachtAPI'.
3. Upload initial commit naar GitHub zodat verdere updates meteen worden bijgehouden.
4. Bouw API:
	4.1. Configuratie van interval
	4.2. Data ophalen
	4.3. Data opslaan in lokale database (MySql?)
	4.4. Data ophalen met parameters
		4.4.1. Parameter meetstation
		4.4.2. Parameter startdatum periode
		4.4.3. Parameter einddatum periode
	4.5. Specifieke endpoint voor tweede applicatie
	4.6. Testing
5. Bouw applicatie:
	5.1. Verbinding met API
	5.2. Data ophalen uit API
	5.3. Data ophalen op basis van parameters uit API
		5.3.1. Parameter meetstation
		5.3.2. Parameter startdatum periode
		5.3.3. Parameter einddatum periode
	5.4. Grafiek plotten
	5.5. Grafiek met meeteenheden
	5.6. Meeteenheden togglen/filtreren met checkboxes
	5.7. Testing
6. Ruim documenteren met comments
7. Handleiding
8. Regel SSL certificaat
9. Self hosting of lokaal houden?

[Wat moet ik doen?]
Bronvermelding Buienradar met hyperlink https://www.buienradar.nl.
Configuratie van interval (1x per uur/op boot standaard).
Data ophalen uit de feed met drie (twee) parameters.
	- Welk meetstation?
	- Startdatum van meetbaar periode?
	- Einddatum van meetbaar periode? (optioneel, default van startdatum+7)
Data opslaan in lokale MySQL database.

Console app:
	Haal data Buienradar op
	Plaats data in lijst
	Stuur lijst door naar API
	API verwerkt data (POST/UPDATE)
	
Database (MySql/SQL?)
	Database script voor wat filler informatie voor website (placeholder)
Vorige/volgende dagen Buienradar data, niet alleen vandaag
Optimaliseren POST loop console app

Site:
	haal oudste en nieuwste op voor max en min tijdsperiode

[Wat heb ik gedaan?]
Nadat het project is aangemaakt, wordt automatisch een Swagger.io API opgezet.
https://swagger.io is een gemakkelijkere manier om API's op te bouwen. Het maakt gebruik van de OpenAPI Specification (OAS).

Vanuit meerdere bronnen heb ik gelezen dat je beter niet Tasks periodiek kan uitvoeren, aangezien IIS kan besluiten om dan net iets op te ruimen
of iets anders te doen, waardoor de Task niet wordt uitgevoerd. Het is dus erg onbetrouwbaar.
Daarom kies ik ervoor om via Windows Scheduler een klein console applicatie (EducomOpdrachtScheduledTask) periodiek uit te voeren, die een
call op de API doet om de database te updaten.


Package Manager Console:
Add-Migration Initial -Context WeerberichtContext
Add-Migration Initial -Context WeerstationContext
Update-Database -Context WeerberichtContext
Update-Database -Context WeerstationContext

[NuGet]
Microsoft.EntityFrameworkCore - Apache-2.0 licentie
	Microsoft.EntityFrameworkCore.InMemory - lokale opslag
	Microsoft.EntityFrameworkCore.Design - nodig voor scaffolded Entity Framework controllers
	Microsoft.EntityFrameworkCore.Abstractions - dependancy 
	Microsoft.EntityFrameworkCore.Analyzers - dependancy 
	Microsoft.EntityFrameworkCore.Relational - dependancy
MySql.Data - GPLv2 licentie
MySql.Data.EntityFramework - GPLv2 licentie

[Documentatie]
--Installatie--
Installeer de dotnet hosting bundle installer: https://dotnet.microsoft.com/download/dotnet/thank-you/runtime-aspnetcore-5.0.4-windows-hosting-bundle-installer

SQL Express 2019 Database
	Download en installeer https://www.microsoft.com/en-us/Download/details.aspx?id=101064.	Pak de Basic profiel.
	Laat alle instellingen standaard staan (behalve misschien installatiefolder).
	Klik op het eind op Connect Now om te testen of het werkt. Een CMD venster springt op. Als het goed werkt, staat er iets van '1 row affected'.
	Klik daarna op Install SSMS, download en installeer deze ook: https://aka.ms/ssmsfullsetup.
	
Zet SQL op
	Windows + R, voer 'Ssms' uit.
	Connect met: [Computer naam]\SQLEXPRESS via Windows Authentication, deze staat waarschijnlijk al standaard ingevuld.
	Creëer een database met de naam EducomOpdrachtAPI.
	
	
Installeer IIS
	Windows + R, voer 'optionalfeatures' uit.
	Klik op de checkbox voor Internet Information Services.
	Open het mapje en ga naar World Wide Web-services, Toepassingontwikkelingsfuncties en klik op ASP, ASP.NET 3.5 en ASP.NET 4.8.
	Klik op OK. Laat het installeren.
	
Zet IIS op
	Windows + R, voer 'InetMgr' uit.
	Klik met de rechtermuisknop op 'Sites' links, en klik op Website toevoegen.
	Vul een sitenaam in, ik heb gekozen voor 'Educom Opdracht Site' en 'Educom Opdracht API'.
	Kies een fysiek pad om de server in op te slaan.
	Zet binding-type op https. Kies onderaan een SSL-certificaat (ik heb gekozen voor IIS Express Development Certificate).
	Laat de rest van de instellingen met rust, klik op OK. Herhaal dit voor de API, maar zet dan de port één verder (444 ipv 443).
	
Zet database op
	Open het API project, en open de Package Manager Console.
	Vul de volgende commando's in:
		Add-Migration Initial -Context WeerberichtContext
		Add-Migration Initial -Context WeerstationContext
		Update-Database -Context WeerberichtContext
		Update-Database -Context WeerstationContext
	Dit bouwt de database op met de modellen binnenin de API.
	
Exporteer projecten
	Klik met de rechtermuisknop op EducomOpdracht rechts, en klik op Publish.
	Kies als Target Folder. Selecteer als location de folder die je eerder hebt aangemaakt bij de IIS stap.
	Klik op Finish. Klik op de volgende scherm op Publish.
	Herhaal dit voor de API.
	
Opzetten Console applicatie
	Build de console applicatie als een Release build.
	Ga naar de opslag folder voor de console applicatie en plaats dit op een veilige, permanente plek.
	
--Uitvoering--
Configuratie
	Check of de configuratie van de console app (EducomOpdrachtTaskScheduler.dll.config) op de juiste URLs staan: https://localhost:444/api/Weerstations en https://localhost:444/api/Weerberichten.
	De port is (als je dit niet aangepast hebt) 444 voor de API.
	Check ook of de username en password matchen met die van de config van de API (app.config). Deze zijn bij default 'externalConsoleApp' en 'externalConsoleAppPassword'.
	---
	Check de configuratie van de API (appsettings.json) en kijk na of de connection string overeen komt met onderstaand:
	Server=localhost\SQLEXPRESS;Database=EducomOpdracht;Trusted_Connection=True;
	Zorg dat er niet één \ staat, maar twee \\! Anders ziet de code het als een break, en wordt het niet uitgevoerd.

IIS
	Check of beide toepassingsgroepen van beide de site en API lopen. Zo niet, start deze.
	Hetzelfde voor de site en API zelf, check of deze lopen. Zo niet, start deze.