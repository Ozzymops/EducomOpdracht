[Stappenplan]
1. Creëer Visual Studio project met template 'ASP.NET Core Web App (Model-View-Controller)' genaamd 'EducomOpdracht'.
2. Stel twee projects in: 'EducomOpdracht' en 'EducomOpdrachtAPI'.
3. Upload initial commit naar GitHub zodat verdere updates meteen worden bijgehouden.
4. Bouw API:
	4.1. Configuratie van interval
	4.2. Data ophalen
	4.3. Data opslaan in lokale database (MySql?)
	4.4. Data ophalen met parameters
		4.4.1. Parameter meetstation
		4.4.2. Parameter startdatum periode
		4.4.3. Parameter einddatum periode
	4.5. Specifieke endpoint voor tweede applicatie
	4.6. Testing
5. Bouw applicatie:
	5.1. Verbinding met API
	5.2. Data ophalen uit API
	5.3. Data ophalen op basis van parameters uit API
		5.3.1. Parameter meetstation
		5.3.2. Parameter startdatum periode
		5.3.3. Parameter einddatum periode
	5.4. Grafiek plotten
	5.5. Grafiek met meeteenheden
	5.6. Meeteenheden togglen/filtreren met checkboxes
	5.7. Testing
6. Ruim documenteren met comments
7. Handleiding
8. Regel SSL certificaat
9. Self hosting of lokaal houden?

[Wat moet ik doen?]
Bronvermelding Buienradar met hyperlink https://www.buienradar.nl.
Configuratie van interval (1x per uur/op boot standaard).
Data ophalen uit de feed met drie (twee) parameters.
	- Welk meetstation?
	- Startdatum van meetbaar periode?
	- Einddatum van meetbaar periode? (optioneel, default van startdatum+7)
Data opslaan in lokale MySQL database.

Console app:
	Haal data Buienradar op
	Plaats data in lijst
	Stuur lijst door naar API
	API verwerkt data (POST/UPDATE)

[Wat heb ik gedaan?]
Nadat het project is aangemaakt, wordt automatisch een Swagger.io API opgezet.
https://swagger.io is een gemakkelijkere manier om API's op te bouwen. Het maakt gebruik van de OpenAPI Specification (OAS).

Vanuit meerdere bronnen heb ik gelezen dat je beter niet Tasks periodiek kan uitvoeren, aangezien IIS kan besluiten om dan net iets op te ruimen
of iets anders te doen, waardoor de Task niet wordt uitgevoerd. Het is dus erg onbetrouwbaar.
Daarom kies ik ervoor om via Windows Scheduler een klein console applicatie (EducomOpdrachtScheduledTask) periodiek uit te voeren, die een
call op de API doet om de database te updaten.

[NuGet]
Microsoft.EntityFrameworkCore - Apache-2.0 licentie
	Microsoft.EntityFrameworkCore.InMemory - lokale opslag
	Microsoft.EntityFrameworkCore.Design - nodig voor scaffolded Entity Framework controllers
	Microsoft.EntityFrameworkCore.Abstractions - dependancy 
	Microsoft.EntityFrameworkCore.Analyzers - dependancy 
	Microsoft.EntityFrameworkCore.Relational - dependancy
MySql.Data - GPLv2 licentie
MySql.Data.EntityFramework - GPLv2 licentie

[Documentatie]
--Installatie--
Installeer de dotnet hosting bundle installer: https://dotnet.microsoft.com/download/dotnet/thank-you/runtime-aspnetcore-5.0.4-windows-hosting-bundle-installer

Installeer IIS
	Windows + R, voer 'optionalfeatures' uit.
	Klik op de checkbox voor Internet Information Services.
	Open het mapje en ga naar World Wide Web-services, Toepassingontwikkelingsfuncties en klik op ASP, ASP.NET 3.5 en ASP.NET 4.8.
	Klik op OK. Laat het installeren.
	
Zet IIS op
	Open 'Beheer van IIS Services', klik met de rechtermuisknop op 'Sites' links, en klik op Website toevoegen.
	Vul een sitenaam in, ik heb gekozen voor 'Educom Opdracht Site' en 'Educom Opdracht API'.
	Kies een fysiek pad om de server in op te slaan.
	Zet binding-type op https. Kies onderaan een SSL-certificaat (ik heb gekozen voor IIS Express Development Certificate).
	Laat de rest van de instellingen met rust, klik op OK. Herhaal dit voor de API, maar zet dan de port één verder (444 ipv 443).
	
Exporteer projecten
	Klik met de rechtermuisknop op EducomOpdracht rechts, en klik op Publish.
	Kies als Target Folder. Selecteer als location de folder die je eerder hebt aangemaakt bij de IIS stap.
	Klik op Finish. Klik op de volgende scherm op Publish.
	Herhaal dit voor de API.
	
--Uitvoering--

Voer 'dotnet dev-certs https --trust' uit in alle projecten:
	Rechter muisknop op project, Open in Terminal. Onderaan opent een Developer PowerShell, voer bovenstaande command uit.